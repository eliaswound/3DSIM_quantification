clear;close all;clc;
folder_name=uigetdir('Please select the folder that contains all the .mat file generated by ALI_basalbody_analysis_Main');
cd(folder_name);
files = dir([folder_name '\*_sensoryposition_generateddata.mat']);

z=1;
if isempty(files)
    display('no files identified under the current folder')
end

sensoryy=NaN(length(files),2);
sensoryx=NaN(length(files),2);
direction=[];
sequence=[];
sequence2=[];
vector_length=[];
cilia_number=[];





for i=1:length(files)
    %try
    data=importdata(files(i).name);
    name=files(i).name;
    name2=[files(i).name(1:end-33) 'directionfunction_generateddata.mat'];
    name3=[files(i).name(1:end-35) '_main_information.mat'];
    
    sequence=[sequence;i];
    data2=importdata(name2);
    data3=importdata(name3);
    
    cilia_number=[cilia_number;data3.basalbody_number];
    
    for j=1:length(data.sensory_y)
        y_distance=data.sensory_y(j);
        y_max=data.bounding_y_max;
        y_min=data.bounding_y_min;
        range=y_max-y_min;
        y=y_distance-y_min; 
        normalizeddata=y/range;
        sensoryy(i,j)=normalizeddata;
        sensoryx(i,j)=data3.x_distance(j);
    end 
    
    vector_len=circ_r(data2.dp(:,6));
    vector_length=[vector_length;vector_len]; 
    
    %catch
     %sequence2=[sequence2;i];
   %end   
end

index=find(cilia_number>400);
cilia_number(index)=NaN;


vector_length(index,:)=NaN;
sensoryy(index,:)=NaN;
sensoryx(index,:)=NaN;


% figure display
for i=1:length(sensoryy)
    for j=1:length(sensoryy(i,:))
       if ~ isnan(sensoryy(i,j))
        sensoryy(i,j)=-sensoryy(i,j)+0.5;
       end
    end
end
%--------------------------------------------------------------------------
% Group the four conditions
%--------------------------------------------------------------------------
% case 1: 1 hybrid cilia
% case 2: 2 hybrid cilia
% case 3: no cilia(the dot is on the left end)
%--------------------------------------------------------------------------
% case 4: too messy(the dot is on the right end)
% case NaN: too many cilia
%--------------------------------------------------------------------------

group=NaN(length(sensoryy),1);


for i=1:length(sensoryy)
    if ~isnan(sensoryy(i,2))
        group(i,1)=2;
    elseif sensoryx(i,1)>0.5&&sensoryy(i,1)<0
        group(i,1)=3;
    elseif sensoryx(i,1)<-0.5&&sensoryy(i,1)<0
        group(i,1)=4;
    elseif sensoryx(i,1)<0.5&&sensoryx(i,1)>-0.5&&sensoryy(i,1)>-0.5&&sensoryy(i,1)<0.5
        group(i,1)=1;
    end
end

%--------------------------------------------------------------------------
% calculate the percentage of all the cells
%--------------------------------------------------------------------------
index_onecilia=find(group==1);
index_twocilia=find(group==2);
index_nocilia=find(group==3);

percentage_1cilia=length(index_onecilia)/(length(index_onecilia)+length(index_twocilia)+length(index_nocilia));
percentage_2cilia=length(index_twocilia)/(length(index_onecilia)+length(index_twocilia)+length(index_nocilia));
percentage_0cilia=length(index_nocilia)/(length(index_onecilia)+length(index_twocilia)+length(index_nocilia));

%--------------------------------------------------------------------------
% Position bias for different populations
%--------------------------------------------------------------------------
sensoryx_1cilia=sensoryx(index_onecilia,1);
sensoryx_2cilia=[sensoryx(index_twocilia,1);sensoryx(index_twocilia,2)];
sensoryy_1cilia=sensoryy(index_onecilia,1);
sensoryy_2cilia=[sensoryy(index_twocilia,1);sensoryy(index_twocilia,2)];
%--------------------------------------------------------------------------
% vector length for different populations
%--------------------------------------------------------------------------
vectorlength_1cilia=vector_length(index_onecilia,1);
vectorlength_2cilia=vector_length(index_twocilia,1);
vectorlength_0cilia=vector_length(index_nocilia,1);


%--------------------------------------------------------------------------
% out put all the figures
%--------------------------------------------------------------------------

% percentage

x = [percentage_1cilia,percentage_2cilia,percentage_0cilia];
labels = {'1 cilia','2 cilia','no cilia'};

figure
pie(x,labels)

% position bias

figure
subplot(2,2,1)

hist(sensoryy_1cilia,-0.6:0.1:0.6)
xlabel('Distance')
ylabel('Cell counts')
title('one sensory cilia, flow direction')
subplot(2,2,2)

hist(sensoryy_2cilia,-0.6:0.1:0.6)
xlabel('Distance')
ylabel('Cell counts')
title('two sensory cilia, flow direction')
subplot(2,2,3)

hist(sensoryx_1cilia,-0.6:0.1:0.6)
xlabel('Distance')
ylabel('Cell counts')
title('one sensory cilia, perpendicular flow direction')
subplot(2,2,4)

hist(sensoryx_2cilia,-0.6:0.1:0.6)
xlabel('Distance')
ylabel('Cell counts')
title('two sensory cilia, perpendicular flow direction')

% vectorlength

figure
subplot(1,3,1)
boxplot(vectorlength_0cilia)
title('no hybrid cilia')
subplot(1,3,2)
boxplot(vectorlength_1cilia)
title('1 hybrid cilia')
subplot(1,3,3)
boxplot(vectorlength_2cilia)
title('2 hybrid cilia')








%
% sensoryy_rawdata=sensoryy;
% sensoryx_rawdata=sensoryx;
% outbounds=find(sensoryy<-0.5|sensoryx<-0.5|sensoryx>0.5|sensoryy>0.5);
% sensoryx(outbounds)=[];
% sensoryy(outbounds)=[];
% 
% hist(sensoryy,-0.6:0.1:0.6)
% 
% title('Sensory cilia position show localization bias')
% xlabel('Distance to the flow direction normalized by the cell length along the cell')
% ylabel('Cell counts')
% % figure
% % scatter(vector_length,sensoryy)
% % xlabel('vector length')
% % ylabel('sensoryy relative position')
% % title('Sensory cilia position as a function of vector length')
% % [R,P] = corrcoef(vector_length,sensoryy);
% figure
% hist(sensoryx,-0.6:0.1:0.6)
% title('Sensory cilia position distribution perpendicular to the flow')
% xlabel('Distance to the center normalized by the cell width')
% ylabel('Cell counts')
% 
% dlmwrite('sensoryx.txt',sensoryx','delimiter',',')
% dlmwrite('sensoryy.txt',sensoryy','delimiter',',')
% 
%  figure
%  scatter(sensoryy_vectorlengthcorrelation(:,1),sensoryy_vectorlengthcorrelation(:,2))
%  xlabel('vector length')
%  ylabel('sensoy position bias')
%  
% 
% 
% 
