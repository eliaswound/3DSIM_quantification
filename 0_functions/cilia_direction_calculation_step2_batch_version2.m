clear;close all;clc;
folder_name=uigetdir('Please select the folder that contains all the .mat file generated by cilia_direction_calculation_version2');
cd(folder_name);
files = dir([folder_name '\*_generateddata.mat']);
z=1;
if isempty(files)
    display('no files identified under the current folder')
end
figure1=figure(1);
title('Quantitative analysis of celluar orientation')
alignedcelldirection=[];

for i=1:length(files)
    data=importdata(files(i).name);
    direction=data.dp(:,6); % direction [-pi,pi]
    vector_length=circ_r(direction); 
    mean_direction=circ_mean(direction);
    [p_value,z_value]=circ_rtest(direction);
    save([files(i).name(1:end-4) '_generateddata2.mat']);
    x=vector_length*cos(mean_direction);
    y=vector_length*sin(mean_direction);
    if p_value<0.05
       polar(mean_direction,1,'bo')
       hold on
       compass(x,y,'b-')
       alignedcelldirection=[alignedcelldirection,mean_direction];
    else
       polar(mean_direction,1,'ro')
       hold on
       compass(x,y,'r-')
    end
    hold on
    clear data direction vector_length mean_direction 
    clear p_value z_value
    clear x y
end
saveas(figure1,[folder_name '_cellulardirection.tif'],'tiffn');
saveas(figure1,[folder_name '_cellulardirection.fig'],'fig');

%--------------------------------------------------------------------------
% Calculate whether cells are localized aligned
% for p_value<0.05
% save the mean_direction
% then for all the direction
% calculate the mean direction of all the aligned cells
% make the test to see whether it is aligned on the cell level
%--------------------------------------------------------------------------
% the new data: alignedcelldirection
%--------------------------------------------------------------------------
 cell_vector_length=circ_r(alignedcelldirection'); 
 cell_mean_direction=circ_mean(alignedcelldirection');
 [cell_p_value,cell_z_value]=circ_rtest(alignedcelldirection');
% plot all the directions on a single figure with the mean vector length 
 cell_x=cos(alignedcelldirection');
 cell_y=sin(alignedcelldirection');
 figure
 compass(cell_x,cell_y,'b-')
 hold on 
 compass(cell_vector_length*cos(cell_mean_direction),cell_vector_length*sin(cell_mean_direction),'r-')

 
 message=sprintf(['cell alignment:\nvector length:' num2str(cell_vector_length) '\ncell P value:' num2str(cell_p_value) ...
     '\ncell mean direction:' num2str(cell_mean_direction) '\nRed labels Mean Direction and vector length']);

 title(message);
 

