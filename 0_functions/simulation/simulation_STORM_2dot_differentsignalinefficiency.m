clear
close all
clc
% simulate the structure of GAS8 and project the 3D data into a 2D image   

%% Construct the structure
% top view: 9 dots 
    angle=10:40:330; % 9 dots
    radius=80; % nm
    x=radius*cos(angle/360*2*pi);
    z=radius*sin(angle/360*2*pi);     
% side view: 96 nm repeats
    y=0:96:1000; % the 96 nm repeats
    coordinates=[];
    for i=1:length(y)
        y_one=y(i)*ones(1, length(x));
        coordinates_one=[x;y_one;z];
        coordinates=[coordinates;coordinates_one'];
    end
figure
scatter(coordinates(:,1),coordinates(:,2),5,coordinates(:,3),'filled')
axis equal

colorbar

%%  signaling efficiency
% for each coordinate, suppose there are N molecules
N=3;
% suppose the signaling efficiency is sf
sf=0.125;

% for each position, the real molecule number detected obeys the gaussian distribution
% with a mean N*sf and standard deviation N*sf*(1-sf)
% the final number is generated by a gaussian random number generator

signaling_efficiency=normrnd(N*sf,N*sf*(1-sf),length(coordinates),1);
signaling_efficiency_round=round(signaling_efficiency);
signaling_efficiency_round_normalize=signaling_efficiency_round;
signaling_efficiency_round_normalize(signaling_efficiency_round_normalize<1)=0;


detected_molecules=[];
molecules_detected=[];
for i=1:length(coordinates)
    if signaling_efficiency_round_normalize(i)~=0
       molecules_detected=repmat(coordinates(i,:),[signaling_efficiency_round_normalize(i),1]);
    end
       detected_molecules=[detected_molecules;molecules_detected];
       molecules_detected=[];  
end

figure
scatter(detected_molecules(:,1),detected_molecules(:,2),5,detected_molecules(:,3),'filled')
axis equal

%% Blinking
% suppose the blinking time is bt, blinking standard deviation is bt_s
bt=30;
bt_s=5;
% generate the gausin blur

blinkingtimes=normrnd(bt,bt_s,length(detected_molecules),1);
blinkingtimes_round=round(blinkingtimes);
molecules_blinking=[];
one_molecule_blinking=[];
for i=1:length(detected_molecules)
    if blinkingtimes_round(i)>=1;
       one_molecule_blinking=repmat(detected_molecules(i,:),[blinkingtimes_round(i),1]);
    end
       molecules_blinking=[molecules_blinking;one_molecule_blinking];
       one_molecule_blinking=[];
end

%% gaussian blur



sigma=[12,12,36];
sigma_repmat=repmat(sigma,[length(molecules_blinking),1]);
   
molecule_blinking_gaussian=normrnd(molecules_blinking,sigma_repmat);


figure
scatter(molecule_blinking_gaussian(:,1),molecule_blinking_gaussian(:,2),5,molecule_blinking_gaussian(:,3),'filled')
axis equal
colorbar

% bin by 5 nm 

molecule_blinking_gaussian(:,1)=molecule_blinking_gaussian(:,1)-min(molecule_blinking_gaussian(:,1));
    
    binsize = 5;   % binsize in nm
    xwidth=max(molecule_blinking_gaussian(:,1))-min(molecule_blinking_gaussian(:,1));
    yheight=max(molecule_blinking_gaussian(:,2))-min(molecule_blinking_gaussian(:,2));
    nxbins = ceil(xwidth/binsize);
    nybins = ceil(yheight/binsize);
    xc = linspace(0,xwidth, nxbins);
    yc = linspace(0,yheight, nybins)';
    
    tic
    %IHis = zeros([length(xc) length(yc)]);
    IHis = hist2d(molecule_blinking_gaussian(:,1), molecule_blinking_gaussian(:,2), xc, yc);
    toc
    figure
    imshow(IHis)
    
    % gaussian smooth
    disp('------------------------------------------------------------------');
    disp('... Gaussian Smooth ing ...');
resolution=12;
bin=5;
    GaussianBottom=ceil(resolution*3/bin); % unit - pixel
% resolution is 2.355fold of standard deviation (sigma)
% the bottome of the gaussian peak is 3-fold of resolution 
if mod(GaussianBottom,2)==1
    GaussianBottom=GaussianBottom;
else
    GaussianBottom=GaussianBottom+1;
end
GaussianStd=floor(GaussianBottom/6); % unit - pixel
h1 = fspecial('gaussian', GaussianBottom , GaussianStd);
tic
IHisg = imfilter(IHis, h1); 
toc

figure
imshow(IHisg)

norm = double(max(max(IHisg)));
nNorm = double(IHisg)./norm; 

imwrite(uint16(60000*nNorm),'simulationtest.tif','tif', 'Compression', 'none', 'WriteMode',  'overwrite');
